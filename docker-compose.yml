---
version: '2.4'
services:
  # Base container is used for development tasks like tests, linting,
  # and building docs.
  base:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: tecken:build
    env_file:
      - docker/config/local_dev.env
      - .env

  # Web container is a prod-like fully-functioning container.
  web:
    extends:
      service: base
    depends_on:
      - db
      - redis-cache
    ports:
      - "${EXPOSE_TECKEN_PORT:-8000}:8000"
    links:
      - db
      - fakesentry
      - redis-cache
      - localstack
      - oidcprovider
      - statsd
    volumes:
      - $PWD:/app
    command: ["web", "--dev"]

  # Container specifically for running tests.
  test:
    extends:
      service: base
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    links:
      - db
      - fakesentry
      - redis-cache
    volumes:
      - $PWD:/app

  test-ci:
    extends:
      service: base
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    links:
      - db
      - fakesentry
      - redis-cache

  # Web container is a prod-like fully-functioning container.
  gunicorn:
    extends:
      service: base
    ports:
      - "${EXPOSE_TECKEN_PORT:-8000}:8000"
    links:
      - db
      - redis-cache
    command: web

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
      - "35729:35729"
    volumes:
      - $PWD/frontend:/app
    command: start

  # Same as 'frontend' but no volumes or command
  frontend-ci:
    build:
      context: .
      dockerfile: frontend/Dockerfile

  # https://hub.docker.com/_/postgres/
  db:
    image: postgres:12.7
    environment:
      # Create the superuser account
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tecken

  # https://hub.docker.com/_/redis
  # This is the version we run in production
  redis-cache:
    image: redis:6.2.6

  # https://hub.docker.com/r/localstack/localstack/
  # localstack running a fake AWS S3
  localstack:
    image: localstack/localstack:2.2.0
    environment:
      - LOCALSTACK_HOST=localstack
    ports:
      - "${EXPOSE_LOCALSTACK_PORT:-4566}:4566"

  # https://github.com/willkg/kent
  fakesentry:
    build:
      context: docker/images/fakesentry
    image: local/tecken_fakesentry
    ports:
      - "${EXPOSE_SENTRY_PORT:-8090}:8090"
    command: run --host 0.0.0.0 --port 8090

  # https://hub.docker.com/r/mozilla/oidc-testprovider
  oidcprovider:
    build:
      context: docker/images/oidcprovider
    image: local/tecken_oidcprovider
    ports:
      - "${EXPOSE_OIDC_PORT:-8080}:8080"

  # https://hub.docker.com/r/hopsoft/graphite-statsd/
  statsd:
    image: hopsoft/graphite-statsd:latest
    ports:
      - "${EXPOSE_GRAFANA_PORT:-8081}:80"
