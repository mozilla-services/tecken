# --------------------------------------------
# Local development environment configuration
# --------------------------------------------
#
# See https://tecken.readthedocs.io/ for documentation.

# Tecken
# ------

# Gunicorn things
GUNICORN_TIMEOUT=180

# Statsd things
STATSD_HOST=statsd
STATSD_PORT=8125
STATSD_NAMESPACE=mcboatface

ALLOWED_HOSTS=web,localhost
SECRET_KEY=DontusethisinproductionbutitneedsbelongforCI1234567890

DATABASE_URL=postgresql://postgres:postgres@db/tecken

REDIS_URL=redis://redis-cache:6379/0

SENTRY_DSN=http://public@fakesentry:8090/1

# NOTE(willkg): See docker-compose.yml on how localstack is set up.
AWS_ACCESS_KEY_ID=foo
AWS_SECRET_ACCESS_KEY=foo
AWS_ENDPOINT_URL=http://localstack:4566/

DEBUG=true
LOCAL_DEV_ENV=true
CLOUD_SERVICE_PROVIDER=GCS
UPLOAD_GCS_BUCKET=publicbucket
UPLOAD_GCS_PUBLIC_URL=http://gcs-cdn:8002/publicbucket
UPLOAD_S3_BUCKET=publicbucket

# Default to the test oidcprovider container for Open ID Connect
#
# Client ID and secret must match oidcprovider database
OIDC_RP_CLIENT_ID=1
OIDC_RP_CLIENT_SECRET=bd01adf93cfb
# Redirect for the browser which is running on the docker host
OIDC_OP_AUTHORIZATION_ENDPOINT=http://localhost:8080/openid/authorize
# Requests between the webapp container and the oidcprovider container
OIDC_OP_TOKEN_ENDPOINT=http://oidcprovider:8080/openid/token
OIDC_OP_USER_ENDPOINT=http://oidcprovider:8080/openid/userinfo
# Allow non-SSL connection to oidcprovider
OIDC_VERIFY_SSL=false
# Disable NotBlockedInAuth0Middleware
ENABLE_AUTH0_BLOCKED_CHECK=false

# Used by GCP GCS library for emulation
# The port here is the container port as specified in
# docker-compose.yml for the gcs-emulator service
STORAGE_EMULATOR_HOST=http://gcs-emulator:8001
