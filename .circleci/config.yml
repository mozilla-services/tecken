version: 2
jobs:
  build_test_publish:
    docker:
      - image: mozilla/cidockerbases:docker-latest
    working_directory: ~/tecken

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true
          version: 17.09.0-ce

      - run:
          name: Create version.json
          working_directory: ~/tecken
          command: |
            # create a version.json per https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json

      - run:
          name: Build Docker images
          command: |
            docker info
            cp .env-dist .env
            # build tecken containers
            make build

      - run:
          name: Run tests
          command: |
            make test

      - run:
          name: Run lint check
          command: |
            docker-compose run test-ci lintcheck

      - run:
          name: Linting check for frontend
          command: |
            # touch .env
            docker-compose run frontend-ci lint

      - run:
          name: Push to Dockerhub
          working_directory: ~/tecken
          command: |
            # set DOCKER_DEPLOY=true in Circle UI to push to Dockerhub
            DOCKER_DEPLOY="${DOCKER_DEPLOY:-false}"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              bin/ci/deploy-dockerhub.sh latest
            fi
            if [ -n "${CIRCLE_TAG}" ]; then
              bin/ci/deploy-dockerhub.sh "$CIRCLE_TAG"
            fi

  docs:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "docs-requirements.txt" }}
      - run:
          name: Create virtualenv
          command: |
            python3 -m venv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install requirements
          command: pip install -r docs-requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "docs-requirements.txt" }}
          paths:
            - "~/venv"
      - run:
          name: Build docs
          command: |
            cd docs
            make html

workflows:
  version: 2
  main:
    jobs:
      - build_test_publish:
          filters:
            tags:
              only: /.*/
      - docs
