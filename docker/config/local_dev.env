# --------------------------------------------
# Local development environment configuration
# --------------------------------------------
#
# See https://tecken.readthedocs.io/ for documentation.

# Tecken
# ------

# Statsd things
STATSD_HOST=statsd
STATSD_PORT=8125
STATSD_NAMESPACE=mcboatface

ALLOWED_HOSTS=web,localhost
SECRET_KEY=DontusethisinproductionbutitneedsbelongforCI1234567890

DATABASE_URL=postgresql://postgres:postgres@db/tecken

SENTRY_DSN=http://public@fakesentry:8090/1

# NOTE(willkg): See docker-compose.yml on how localstack is set up.
AWS_ACCESS_KEY_ID=foo
AWS_SECRET_ACCESS_KEY=foo
AWS_ENDPOINT_URL=http://localstack:4566/

DEBUG=true
LOCAL_DEV_ENV=true
SYMBOL_URLS=http://localstack:4566/publicbucket/?access=public
UPLOAD_DEFAULT_URL=http://localstack:4566/publicbucket/?access=public
UPLOAD_TRY_SYMBOLS_URL=http://localstack:4566/publicbucket/try/?access=public

# Default to the test oidcprovider container for Open ID Connect
#
# Client ID and secret must match oidcprovider database
OIDC_RP_CLIENT_ID=1
OIDC_RP_CLIENT_SECRET=bd01adf93cfb
# Load oidcprovider on public port 8081, without /etc/hosts changes
OIDC_OP_AUTHORIZATION_ENDPOINT=http://oidc.127.0.0.1.nip.io:8081/openid/authorize
# The backend connects to oidcprovider on docker port 8080
# Django's URL validator, used in URLValue, doesn't like docker hostnames
OIDC_OP_TOKEN_ENDPOINT=http://oidcprovider:8080/openid/token
# Same as token switch from URLValue to Value
OIDC_OP_USER_ENDPOINT=http://oidcprovider:8080/openid/userinfo
# Allow non-SSL connection to oidcprovider
OIDC_VERIFY_SSL=false
# Disable NotBlockedInAuth0Middleware
ENABLE_AUTH0_BLOCKED_CHECK=false


# Eliot
# -----

# Local development flag
ELIOT_LOCAL_DEV_ENV=True

# Logging
ELIOT_LOGGING_LEVEL=INFO

# Statsd things
ELIOT_STATSD_HOST=statsd
ELIOT_STATSD_NAMESPACE=mcboatface
ELIOT_STATSD_PORT=8125
ELIOT_SYMBOLS_CACHE_MAX_SIZE=400000000
ELIOT_SECRET_SENTRY_DSN=http://public@fakesentry:8090/1
