---
version: '2.4'
services:
  # Base container is used for development tasks like tests, linting,
  # and building docs.
  base:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        userid: ${USE_UID:-10001}
        groupid: ${USE_GID:-10001}
    image: tecken:build
    env_file:
      - docker/config/local_dev.env
      - .env

  # Web container is a prod-like fully-functioning container.
  web:
    extends:
      service: base
    ports:
      - "${EXPOSE_TECKEN_PORT:-8000}:8000"
    depends_on:
      db: &condition_service_healthy
        condition: service_healthy
      fakesentry: *condition_service_healthy
      gcs-emulator: *condition_service_healthy
      redis-cache: *condition_service_healthy
      localstack: *condition_service_healthy
      oidcprovider: *condition_service_healthy
      statsd: *condition_service_healthy
    volumes:
      - $PWD:/app
    command: ["web", "--dev"]

  # Container specifically for running tests.
  test-ci:
    extends:
      service: base
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    depends_on:
      db: *condition_service_healthy
      gcs-emulator: *condition_service_healthy
      fakesentry: *condition_service_healthy
      redis-cache: *condition_service_healthy
      localstack: *condition_service_healthy
      oidcprovider: *condition_service_healthy
      statsd: *condition_service_healthy

  # TODO(2024-01-30): This configuration can be simplified using `extends: test-ci` once the fix for
  # https://github.com/docker/compose/issues/11413 is available in all relevant environments.
  test:
    extends:
      service: base
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    depends_on:
      db: *condition_service_healthy
      gcs-emulator: *condition_service_healthy
      fakesentry: *condition_service_healthy
      redis-cache: *condition_service_healthy
      localstack: *condition_service_healthy
      oidcprovider: *condition_service_healthy
      statsd: *condition_service_healthy
    volumes:
      - $PWD:/app

  # Dev container https://containers.dev/, e.g. for VS Code
  devcontainer:
    extends:
      service: base
    build:
      dockerfile: .devcontainer/Dockerfile
      args:
        userid: ${USE_UID:-10001}
        groupid: ${USE_GID:-10001}
    image: tecken-devcontainer
    entrypoint: ["sleep", "inf"]
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    depends_on:
      db: *condition_service_healthy
      gcs-emulator: *condition_service_healthy
      fakesentry: *condition_service_healthy
      redis-cache: *condition_service_healthy
      localstack: *condition_service_healthy
      oidcprovider: *condition_service_healthy
      statsd: *condition_service_healthy
    volumes:
      - $PWD:/app

  # Web container is a prod-like fully-functioning container.
  gunicorn:
    extends:
      service: base
    ports:
      - "${EXPOSE_TECKEN_PORT:-8000}:8000"
    depends_on:
      db: *condition_service_healthy
      redis-cache: *condition_service_healthy
    command: web

  # Same as 'frontend' but no volumes or command
  frontend-ci:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        userid: ${USE_UID:-10001}
        groupid: ${USE_GID:-10001}

  frontend:
    extends:
      frontend-ci
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
      - "35729:35729"
    volumes:
      - $PWD/frontend:/app
    command: start

  # https://hub.docker.com/_/postgres/
  db:
    image: postgres:12.7
    environment:
      # Create the superuser account
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tecken
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 5

  # https://hub.docker.com/_/redis
  # This is the version we run in production
  redis-cache:
    image: redis:6.2.6
    healthcheck:
      test: ["CMD-SHELL", '[ "$(redis-cli ping)" = "PONG" ]']
      interval: 1s
      timeout: 3s
      retries: 5

  # https://github.com/fsouza/fake-gcs-server
  # Fake GCP GCS server for local development and testing
  gcs-emulator:
    build:
      context: docker/images/gcs-emulator
    image: local/tecken_gcs_emulator
    command: >-
      -port 8001
      -scheme http
      -external-url http://gcs-emulator:8001
      -public-host gcs-emulator:8001
    ports:
      - "${EXPOSE_GCS_EMULATOR_PORT:-8001}:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/storage/v1/b"]
      interval: 1s
      timeout: 3s
      retries: 5
    depends_on:
      - gcs-cdn

  # nginx as a reverse proxy simulating a CDN in front of the GCS emulator.
  gcs-cdn:
    build:
      context: docker/images/gcs-cdn
    image: local/tecken_gcs_cdn
    ports:
      - "${EXPOSE_CDN_PORT:-8002}:8002"

  # https://hub.docker.com/r/localstack/localstack/
  # localstack running a fake AWS S3
  localstack:
    image: localstack/localstack:2.2.0
    environment:
      - LOCALSTACK_HOST=localstack
    ports:
      - "${EXPOSE_LOCALSTACK_PORT:-4566}:4566"

  # https://github.com/willkg/kent
  fakesentry:
    build:
      context: docker/images/fakesentry
    image: local/tecken_fakesentry
    ports:
      - "${EXPOSE_SENTRY_PORT:-8090}:8090"
    command: run --host 0.0.0.0 --port 8090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/"]
      interval: 1s
      timeout: 3s
      retries: 5

  # https://hub.docker.com/r/mozilla/oidc-testprovider
  oidcprovider:
    build:
      context: docker/images/oidcprovider
    image: local/tecken_oidcprovider
    ports:
      - "${EXPOSE_OIDC_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 2s
      timeout: 5s
      retries: 10

  # https://hub.docker.com/r/hopsoft/graphite-statsd/
  statsd:
    image: hopsoft/graphite-statsd:latest
    ports:
      - "${EXPOSE_GRAFANA_PORT:-8081}:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 1s
      timeout: 3s
      retries: 5
