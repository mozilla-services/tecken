version: '2'

services:
  db:
    image: postgres:9.5
  redis-store:
    build: ./docker/images/redis
  redis-cache:
    image: redis:3.2

  # This builds an image of the deploy base. Then we extend that with
  # dev-related things to do our dev-y stuff.
  deploy-base:
    build:
      context: .
      dockerfile: Dockerfile
    image: tecken:deploy_base

  dev-base:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: tecken:dev

  # ------------------------------------------------------------------
  # After this point is dev-related services.
  # ------------------------------------------------------------------

  # Base container is used for development tasks like tests, linting, coverage
  # and building docs.
  base:
    image: tecken:dev
    environment:
      - DJANGO_CONFIGURATION
    env_file:
      - .env
    volumes:
      - $PWD:/app
    # command: "true"

  # Web container is a prod-like fully-functioning container.
  web:
    extends:
      service: base
    ports:
      - "8000:8000"
    links:
      - db
      - redis-store
      - redis-cache
      - statsd
    command: web-dev

  # Container specifically for running system tests against a remote.
  # Python based but distinct from the 'web' container.
  systemtest:
    build:
      context: .
      dockerfile: tests/systemtest/Dockerfile
    volumes:
      - $PWD:/app
    environment:
      - BASE_URL=http://web:8000
    links:
      - web

  # Web container is a prod-like fully-functioning container.
  gunicorn:
    extends:
      service: base
    ports:
      - "8000:8000"
    links:
      - db
      - redis-store
      - redis-cache
    command: web

  statsd:
    # https://hub.docker.com/r/hopsoft/graphite-statsd/
    image: hopsoft/graphite-statsd
    ports:
      - "9000:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126"
